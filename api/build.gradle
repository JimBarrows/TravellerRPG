plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.barrows.travller'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.graphql-java:graphql-java-extended-scalars:20.0'
	implementation 'com.graphql-java:graphql-java-extended-validation:20.0'
	implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.1.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Cucumber dependencies
	testImplementation 'io.cucumber:cucumber-java:7.15.0'
	testImplementation 'io.cucumber:cucumber-spring:7.15.0'
	testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.15.0'
	testImplementation 'org.junit.platform:junit-platform-suite-api:1.10.2'
}

// Create a custom task for running Cucumber tests
task runCucumberTests(type: JavaExec) {
	description = 'Runs Cucumber BDD tests.'
	group = 'verification'

	mainClass = 'io.cucumber.core.cli.Main'

	// Explicitly use Java 21
	executable = '/Users/JimBarrows/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java'

	// Print Java version before running tests
	doFirst {
		println "Java version: ${System.getProperty('java.version')}"
		println "Java home: ${System.getProperty('java.home')}"
	}

	classpath = sourceSets.test.runtimeClasspath

	args = [
		'--plugin', 'pretty',
		'--plugin', 'html:build/reports/cucumber/cucumber.html',
		'--glue', 'com.barrows.travller.api.cucumber',
		'../features'
	]
}

// Create a custom verification task that doesn't depend on the test task
task verifyWithCucumber {
	description = 'Runs Cucumber tests as part of verification.'
	group = 'verification'

	dependsOn runCucumberTests
}

// Add our custom verification task to the build process
tasks.named('build') {
    dependsOn verifyWithCucumber
}
